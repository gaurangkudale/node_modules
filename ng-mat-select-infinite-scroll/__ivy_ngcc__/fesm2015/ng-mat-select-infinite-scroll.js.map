{"version":3,"file":"ng-mat-select-infinite-scroll.js","sources":["../../../projects/ng-mat-select-infinite-scroll/src/lib/mat-select-infinite-scroll.directive.ts","../../../projects/ng-mat-select-infinite-scroll/src/lib/mat-select-infinite-scroll.module.ts","../../../projects/ng-mat-select-infinite-scroll/src/public_api.ts","../../../projects/ng-mat-select-infinite-scroll/src/ng-mat-select-infinite-scroll.ts"],"names":[],"mappings":";;;;;;;MAQa,gCAAgC;AAAG,IAc9C,YAAoB,SAAoB,EAAU,MAAc;AAClE,QADsB,cAAS,GAAT,SAAS,CAAW;AAAC,QAAS,WAAM,GAAN,MAAM,CAAQ;AAAC,QAZxD,cAAS,GAAG,KAAK,CAAC;AAC7B,QAAW,iBAAY,GAAG,GAAG,CAAC;AAC9B,QACY,mBAAc,GAAG,IAAI,YAAY,EAAQ,CAAC;AACtD,QAEU,UAAK,GAAG,CAAC,CAAC;AACpB,QAAU,UAAK,GAAG,CAAC,CAAC;AACpB,QAAU,uBAAkB,GAAG,qBAAqB,CAAC;AACrD,QACU,eAAU,GAAG,IAAI,OAAO,EAAW,CAAC;AAC9C,KAEG;AACH,IACE,QAAQ;AACV,QAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,eAAe;AACjB,QAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAC9B,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,CAAC,MAAM;AACvB,YAAM,IAAI,MAAM,EAAE;AAClB,gBAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC;AACxD,gBAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC/D,gBAAQ,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACtC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/B,KAAG;AACH,IACE,iBAAiB;AACnB,QAAI,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AAC9C,YAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACrB,YAAM,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC;AACtD,SACK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9C,YAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACrB,SAAK;AACL,KAAG;AACH,IACE,sBAAsB;AACxB,QAAI,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAClC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAC1B,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAC/B,GAAG,CAAC,CAAC,KAAK;AAChB,YAAQ,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACtC,SAAO,CAAC,CACH,CAAC,SAAS,EAAE,CAAC;AAClB,KAAG;AACH,IACE,iBAAiB,CAAC,KAAK;AACzB,QAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;AAClC,YAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;AACzB,gBAAQ,OAAO;AACf,aAAO;AACP,YAAM,MAAM,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;AACnE,YAAM,MAAM,sBAAsB,GAAG,IAAI,CAAC,kBAAkB,GAAG,sBAAsB,CAAC;AACtF,YAAM,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,sBAAsB,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;AAC9F,YACM,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;AAChF,YACM,IAAI,CAAC,gBAAgB,GAAG,SAAS,KAAK,sBAAsB,EAAE;AACpE,gBAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC;AAC1D,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACE,qBAAqB;AAAK,QACxB,OAAO,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,qBAAqB,CAAC;AACrF,KAAG;AACH;4DAlFC,SAAS,SAAC,kBACT,QAAQ,EAAE,oBAAoB,cAC/B;+RACI;AAAC;AAA0D,YAPxD,SAAS;AAAI,YADkC,MAAM;AAAG;AAAG;AAC5D,wBASJ,KAAK;AAAK,2BACV,KAAK;AAAK,uBACV,KAAK;AAAK,6BACV,MAAM;AAAI;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCFJ,6BAA6B;AAC1C;yDARC,QAAQ,SAAC,kBACR;CAAY,EAAE,CAAC,gCAAgC,CAAC,kBAChD,OAAO,EAAE,sBACP,eAAe,kBAChB,kBACD,OAAO,EAAE,CAAC,gCAAgC,CAAC;IAC5C;;;;;;;;;;;;0BACI;AAAC;ACXN;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AAC8C","sourcesContent":["import {AfterViewInit, Directive, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {MatSelect, SELECT_ITEM_HEIGHT_EM} from '@angular/material/select';\nimport {debounceTime, takeUntil, tap} from 'rxjs/operators';\nimport {fromEvent, Subject} from 'rxjs';\n\n@Directive({\n  selector: '[msInfiniteScroll]'\n})\nexport class MatSelectInfiniteScrollDirective implements OnInit, OnDestroy, AfterViewInit {\n\n  @Input() threshold = '15%';\n  @Input() debounceTime = 150;\n  @Input() complete: boolean;\n  @Output() infiniteScroll = new EventEmitter<void>();\n\n  private panel: Element;\n  private thrPx = 0;\n  private thrPc = 0;\n  private singleOptionHeight = SELECT_ITEM_HEIGHT_EM;\n\n  private destroyed$ = new Subject<boolean>();\n\n  constructor(private matSelect: MatSelect, private ngZone: NgZone) {\n  }\n\n  ngOnInit() {\n    this.evaluateThreshold();\n  }\n\n  ngAfterViewInit() {\n    this.matSelect.openedChange.pipe(\n      takeUntil(this.destroyed$)\n    ).subscribe((opened) => {\n      if (opened) {\n        this.panel = this.matSelect.panel.nativeElement;\n        this.singleOptionHeight = this.getSelectItemHeightPx();\n        this.registerScrollListener();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  evaluateThreshold() {\n    if (this.threshold.lastIndexOf('%') > -1) {\n      this.thrPx = 0;\n      this.thrPc = (parseFloat(this.threshold) / 100);\n\n    } else {\n      this.thrPx = parseFloat(this.threshold);\n      this.thrPc = 0;\n    }\n  }\n\n  registerScrollListener() {\n    fromEvent(this.panel, 'scroll').pipe(\n      takeUntil(this.destroyed$),\n      debounceTime(this.debounceTime),\n      tap((event) => {\n        this.handleScrollEvent(event);\n      })\n    ).subscribe();\n  }\n\n  handleScrollEvent(event) {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.complete) {\n        return;\n      }\n      const countOfRenderedOptions = this.matSelect.options.length;\n      const infiniteScrollDistance = this.singleOptionHeight * countOfRenderedOptions;\n      const threshold = this.thrPc !== 0 ? (infiniteScrollDistance * this.thrPc) : this.thrPx;\n\n      const scrolledDistance = this.panel.clientHeight + event.target.scrollTop;\n\n      if ((scrolledDistance + threshold) >= infiniteScrollDistance) {\n        this.ngZone.run(() => this.infiniteScroll.emit());\n      }\n    });\n  }\n\n  getSelectItemHeightPx(): number {\n    return parseFloat(getComputedStyle(this.panel).fontSize) * SELECT_ITEM_HEIGHT_EM;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {MatSelectInfiniteScrollDirective} from './mat-select-infinite-scroll.directive';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [MatSelectInfiniteScrollDirective],\n  imports: [\n    MatSelectModule\n  ],\n  exports: [MatSelectInfiniteScrollDirective]\n})\nexport class MatSelectInfiniteScrollModule {\n}\n","/*\n * Public API Surface of ng-mat-select-infinite-scroll\n */\n\nexport * from './lib/mat-select-infinite-scroll.directive';\nexport * from './lib/mat-select-infinite-scroll.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}