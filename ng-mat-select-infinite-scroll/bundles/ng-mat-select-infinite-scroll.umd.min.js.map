{"version":3,"sources":["../../../projects/ng-mat-select-infinite-scroll/src/lib/mat-select-infinite-scroll.directive.ts","../../../projects/ng-mat-select-infinite-scroll/src/lib/mat-select-infinite-scroll.module.ts"],"names":["MatSelectInfiniteScrollDirective","matSelect","ngZone","this","threshold","debounceTime","infiniteScroll","EventEmitter","thrPx","thrPc","singleOptionHeight","SELECT_ITEM_HEIGHT_EM","destroyed$","Subject","prototype","ngOnInit","evaluateThreshold","ngAfterViewInit","_this","openedChange","pipe","takeUntil","subscribe","opened","panel","nativeElement","getSelectItemHeightPx","registerScrollListener","ngOnDestroy","next","complete","lastIndexOf","parseFloat","fromEvent","tap","event","handleScrollEvent","runOutsideAngular","countOfRenderedOptions","options","length","infiniteScrollDistance","clientHeight","target","scrollTop","run","emit","getComputedStyle","fontSize","Directive","args","selector","MatSelect","NgZone","Input","Output","NgModule","declarations","imports","MatSelectModule","exports"],"mappings":"wfAsBE,SAAAA,EAAoBC,EAA8BC,GAA9BC,KAAAF,UAAAA,EAA8BE,KAAAD,OAAAA,EAZzCC,KAAAC,UAAY,MACZD,KAAAE,aAAe,IAEdF,KAAAG,eAAiB,IAAIC,EAAAA,aAGvBJ,KAAAK,MAAQ,EACRL,KAAAM,MAAQ,EACRN,KAAAO,mBAAqBC,EAAAA,sBAErBR,KAAAS,WAAa,IAAIC,EAAAA,eAKzBb,EAAAc,UAAAC,SAAA,WACEZ,KAAKa,qBAGPhB,EAAAc,UAAAG,gBAAA,WAAA,IAAAC,EAAAf,KACEA,KAAKF,UAAUkB,aAAaC,KAC1BC,EAAAA,UAAUlB,KAAKS,aACfU,WAAU,SAACC,GACPA,IACFL,EAAKM,MAAQN,EAAKjB,UAAUuB,MAAMC,cAClCP,EAAKR,mBAAqBQ,EAAKQ,wBAC/BR,EAAKS,8BAKX3B,EAAAc,UAAAc,YAAA,WACEzB,KAAKS,WAAWiB,MAAK,GACrB1B,KAAKS,WAAWkB,YAGlB9B,EAAAc,UAAAE,kBAAA,WACMb,KAAKC,UAAU2B,YAAY,MAAQ,GACrC5B,KAAKK,MAAQ,EACbL,KAAKM,MAASuB,WAAW7B,KAAKC,WAAa,MAG3CD,KAAKK,MAAQwB,WAAW7B,KAAKC,WAC7BD,KAAKM,MAAQ,IAIjBT,EAAAc,UAAAa,uBAAA,WAAA,IAAAT,EAAAf,KACE8B,EAAAA,UAAU9B,KAAKqB,MAAO,UAAUJ,KAC9BC,EAAAA,UAAUlB,KAAKS,YACfP,EAAAA,aAAaF,KAAKE,cAClB6B,EAAAA,KAAI,SAACC,GACHjB,EAAKkB,kBAAkBD,OAEzBb,aAGJtB,EAAAc,UAAAsB,kBAAA,SAAkBD,GAAlB,IAAAjB,EAAAf,KACEA,KAAKD,OAAOmC,mBAAkB,WAC5B,IAAInB,EAAKY,SAAT,CAGA,IAAMQ,EAAyBpB,EAAKjB,UAAUsC,QAAQC,OAChDC,EAAyBvB,EAAKR,mBAAqB4B,EACnDlC,EAA2B,IAAfc,EAAKT,MAAegC,EAAyBvB,EAAKT,MAASS,EAAKV,MAEzDU,EAAKM,MAAMkB,aAAeP,EAAMQ,OAAOC,UAExCxC,GAAcqC,GACpCvB,EAAKhB,OAAO2C,KAAI,WAAM,OAAA3B,EAAKZ,eAAewC,eAKhD9C,EAAAc,UAAAY,sBAAA,WACE,OAAOM,WAAWe,iBAAiB5C,KAAKqB,OAAOwB,UAAYrC,EAAAA,gDAhF9DsC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kEALJC,EAAAA,iBAD+CC,EAAAA,6CAUpDC,EAAAA,4BACAA,EAAAA,wBACAA,EAAAA,8BACAC,EAAAA,gBCFH,iCAPCC,EAAAA,SAAQN,KAAA,CAAC,CACRO,aAAc,CAACzD,GACf0D,QAAS,CACPC,EAAAA,iBAEFC,QAAS,CAAC5D","sourcesContent":["import {AfterViewInit, Directive, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {MatSelect, SELECT_ITEM_HEIGHT_EM} from '@angular/material/select';\nimport {debounceTime, takeUntil, tap} from 'rxjs/operators';\nimport {fromEvent, Subject} from 'rxjs';\n\n@Directive({\n  selector: '[msInfiniteScroll]'\n})\nexport class MatSelectInfiniteScrollDirective implements OnInit, OnDestroy, AfterViewInit {\n\n  @Input() threshold = '15%';\n  @Input() debounceTime = 150;\n  @Input() complete: boolean;\n  @Output() infiniteScroll = new EventEmitter<void>();\n\n  private panel: Element;\n  private thrPx = 0;\n  private thrPc = 0;\n  private singleOptionHeight = SELECT_ITEM_HEIGHT_EM;\n\n  private destroyed$ = new Subject<boolean>();\n\n  constructor(private matSelect: MatSelect, private ngZone: NgZone) {\n  }\n\n  ngOnInit() {\n    this.evaluateThreshold();\n  }\n\n  ngAfterViewInit() {\n    this.matSelect.openedChange.pipe(\n      takeUntil(this.destroyed$)\n    ).subscribe((opened) => {\n      if (opened) {\n        this.panel = this.matSelect.panel.nativeElement;\n        this.singleOptionHeight = this.getSelectItemHeightPx();\n        this.registerScrollListener();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  evaluateThreshold() {\n    if (this.threshold.lastIndexOf('%') > -1) {\n      this.thrPx = 0;\n      this.thrPc = (parseFloat(this.threshold) / 100);\n\n    } else {\n      this.thrPx = parseFloat(this.threshold);\n      this.thrPc = 0;\n    }\n  }\n\n  registerScrollListener() {\n    fromEvent(this.panel, 'scroll').pipe(\n      takeUntil(this.destroyed$),\n      debounceTime(this.debounceTime),\n      tap((event) => {\n        this.handleScrollEvent(event);\n      })\n    ).subscribe();\n  }\n\n  handleScrollEvent(event) {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.complete) {\n        return;\n      }\n      const countOfRenderedOptions = this.matSelect.options.length;\n      const infiniteScrollDistance = this.singleOptionHeight * countOfRenderedOptions;\n      const threshold = this.thrPc !== 0 ? (infiniteScrollDistance * this.thrPc) : this.thrPx;\n\n      const scrolledDistance = this.panel.clientHeight + event.target.scrollTop;\n\n      if ((scrolledDistance + threshold) >= infiniteScrollDistance) {\n        this.ngZone.run(() => this.infiniteScroll.emit());\n      }\n    });\n  }\n\n  getSelectItemHeightPx(): number {\n    return parseFloat(getComputedStyle(this.panel).fontSize) * SELECT_ITEM_HEIGHT_EM;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {MatSelectInfiniteScrollDirective} from './mat-select-infinite-scroll.directive';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [MatSelectInfiniteScrollDirective],\n  imports: [\n    MatSelectModule\n  ],\n  exports: [MatSelectInfiniteScrollDirective]\n})\nexport class MatSelectInfiniteScrollModule {\n}\n"]}