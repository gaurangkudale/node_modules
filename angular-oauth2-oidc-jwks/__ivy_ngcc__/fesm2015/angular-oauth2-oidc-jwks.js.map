{"version":3,"file":"angular-oauth2-oidc-jwks.js","sources":["ng:/angular-oauth2-oidc-jwks/lib/jwks-validation-handler.ts","ng:/angular-oauth2-oidc-jwks/angular-oauth2-oidc-jwks.ts"],"names":["rs.KEYUTIL","rs.KJUR"],"mappings":"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","sourcesContent":["import * as rs from 'jsrsasign';\r\nimport { AbstractValidationHandler, ValidationParams } from 'angular-oauth2-oidc';\r\n\r\n/**\r\n * Validates the signature of an id_token against one\r\n * of the keys of an JSON Web Key Set (jwks).\r\n *\r\n * This jwks can be provided by the discovery document.\r\n */\r\nexport class JwksValidationHandler extends AbstractValidationHandler {\r\n  /**\r\n   * Allowed algorithms\r\n   */\r\n  allowedAlgorithms: string[] = [\r\n    'HS256',\r\n    'HS384',\r\n    'HS512',\r\n    'RS256',\r\n    'RS384',\r\n    'RS512',\r\n    'ES256',\r\n    'ES384',\r\n    'PS256',\r\n    'PS384',\r\n    'PS512'\r\n  ];\r\n\r\n  /**\r\n   * Time period in seconds the timestamp in the signature can\r\n   * differ from the current time.\r\n   */\r\n  gracePeriodInSec = 600;\r\n\r\n  validateSignature(params: ValidationParams, retry = false): Promise<any> {\r\n    if (!params.idToken) throw new Error('Parameter idToken expected!');\r\n    if (!params.idTokenHeader)\r\n      throw new Error('Parameter idTokenHandler expected.');\r\n    if (!params.jwks) throw new Error('Parameter jwks expected!');\r\n\r\n    if (\r\n      !params.jwks['keys'] ||\r\n      !Array.isArray(params.jwks['keys']) ||\r\n      params.jwks['keys'].length === 0\r\n    ) {\r\n      throw new Error('Array keys in jwks missing!');\r\n    }\r\n\r\n    // console.debug('validateSignature: retry', retry);\r\n\r\n    let kid: string = params.idTokenHeader['kid'];\r\n    let keys: object[] = params.jwks['keys'];\r\n    let key: object;\r\n\r\n    let alg = params.idTokenHeader['alg'];\r\n\r\n    if (kid) {\r\n      key = keys.find(k => k['kid'] === kid /* && k['use'] === 'sig' */);\r\n    } else {\r\n      let kty = this.alg2kty(alg);\r\n      let matchingKeys = keys.filter(\r\n        k => k['kty'] === kty && k['use'] === 'sig'\r\n      );\r\n\r\n      /*\r\n            if (matchingKeys.length == 0) {\r\n                let error = 'No matching key found.';\r\n                console.error(error);\r\n                return Promise.reject(error);\r\n            }*/\r\n      if (matchingKeys.length > 1) {\r\n        let error =\r\n          'More than one matching key found. Please specify a kid in the id_token header.';\r\n        console.error(error);\r\n        return Promise.reject(error);\r\n      } else if (matchingKeys.length === 1) {\r\n        key = matchingKeys[0];\r\n      }\r\n    }\r\n\r\n    if (!key && !retry && params.loadKeys) {\r\n      return params\r\n        .loadKeys()\r\n        .then(loadedKeys => (params.jwks = loadedKeys))\r\n        .then(_ => this.validateSignature(params, true));\r\n    }\r\n\r\n    if (!key && retry && !kid) {\r\n      let error = 'No matching key found.';\r\n      console.error(error);\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (!key && retry && kid) {\r\n      let error =\r\n        'expected key not found in property jwks. ' +\r\n        'This property is most likely loaded with the ' +\r\n        'discovery document. ' +\r\n        'Expected key id (kid): ' +\r\n        kid;\r\n\r\n      console.error(error);\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    let keyObj = rs.KEYUTIL.getKey(key);\r\n    let validationOptions = {\r\n      alg: this.allowedAlgorithms,\r\n      gracePeriod: this.gracePeriodInSec\r\n    };\r\n    let isValid = rs.KJUR.jws.JWS.verifyJWT(\r\n      params.idToken,\r\n      keyObj,\r\n      validationOptions\r\n    );\r\n\r\n    if (isValid) {\r\n      return Promise.resolve();\r\n    } else {\r\n      return Promise.reject('Signature not valid');\r\n    }\r\n  }\r\n\r\n  private alg2kty(alg: string) {\r\n    switch (alg.charAt(0)) {\r\n      case 'R':\r\n        return 'RSA';\r\n      case 'E':\r\n        return 'EC';\r\n      default:\r\n        throw new Error('Cannot infer kty from alg: ' + alg);\r\n    }\r\n  }\r\n\r\n  calcHash(valueToHash: string, algorithm: string): Promise<string> {\r\n    let hashAlg = new rs.KJUR.crypto.MessageDigest({ alg: algorithm });\r\n    let result = hashAlg.digestString(valueToHash);\r\n    let byteArrayAsString = this.toByteArrayAsString(result);\r\n    return Promise.resolve(byteArrayAsString);\r\n  }\r\n\r\n  toByteArrayAsString(hexString: string) {\r\n    let result = '';\r\n    for (let i = 0; i < hexString.length; i += 2) {\r\n      let hexDigit = hexString.charAt(i) + hexString.charAt(i + 1);\r\n      let num = parseInt(hexDigit, 16);\r\n      result += String.fromCharCode(num);\r\n    }\r\n    return result;\r\n  }\r\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}