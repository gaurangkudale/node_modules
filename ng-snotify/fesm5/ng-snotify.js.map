{"version":3,"file":"ng-snotify.js","sources":["ng:/ng-snotify/lib/enums/snotify-style.enum.ts","ng:/ng-snotify/lib/decorators/transform-argument.decorator.ts","ng:/ng-snotify/lib/utils.ts","ng:/ng-snotify/lib/decorators/set-toast-type.decorator.ts","ng:/ng-snotify/lib/models/snotify-toast.model.ts","ng:/ng-snotify/lib/services/snotify.service.ts","ng:/ng-snotify/lib/components/buttons/buttons.component.ts","ng:/ng-snotify/lib/components/prompt/prompt.component.ts","ng:/ng-snotify/lib/enums/snotify-position.enum.ts","ng:/ng-snotify/lib/components/snotify/snotify.component.ts","ng:/ng-snotify/lib/components/toast/toast.component.ts","ng:/ng-snotify/lib/pipes/keys.pipe.ts","ng:/ng-snotify/lib/pipes/truncate.pipe.ts","ng:/ng-snotify/lib/snotify.module.ts","ng:/ng-snotify/lib/toast-defaults.ts","ng:/ng-snotify/public-api.ts","ng:/ng-snotify/ng-snotify.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Toast style.\r\n */\r\nexport enum SnotifyStyle {\r\n  simple = 'simple',\r\n  success = 'success',\r\n  error = 'error',\r\n  warning = 'warning',\r\n  info = 'info',\r\n  async = 'async',\r\n  confirm = 'confirm',\r\n  prompt = 'prompt'\r\n}\r\n","import { Snotify } from '../interfaces/snotify.interface';\r\nimport { SnotifyType } from '../types/snotify.type';\r\nimport { SnotifyStyle } from '../enums/snotify-style.enum';\r\n\r\n/**\r\n * Transform arguments to Snotify object\r\n * @param target any\r\n * @param propertyKey SnotifyType\r\n * @param descriptor PropertyDescriptor\r\n * @returns Snotify\r\n */\r\nexport function TransformArgument(target: any, propertyKey: SnotifyType, descriptor: PropertyDescriptor) {\r\n  if (propertyKey === SnotifyStyle.async) {\r\n    return {\r\n      value(...args: any[]) {\r\n        let result;\r\n        if (args.length === 2) {\r\n          result = {\r\n            title: null,\r\n            body: args[0],\r\n            config: null,\r\n            action: args[1]\r\n          };\r\n        } else if (args.length === 3) {\r\n          if (typeof args[1] === 'string') {\r\n            result = {\r\n              title: args[1],\r\n              body: args[0],\r\n              config: null,\r\n              action: args[2]\r\n            };\r\n          } else {\r\n            result = {\r\n              title: null,\r\n              body: args[0],\r\n              config: args[2],\r\n              action: args[1]\r\n            };\r\n          }\r\n        } else {\r\n          result = {\r\n            title: args[1],\r\n            body: args[0],\r\n            config: args[3],\r\n            action: args[2]\r\n          };\r\n        }\r\n        return descriptor.value.apply(this, [result as Snotify]);\r\n      }\r\n    };\r\n  } else {\r\n    return {\r\n      value(...args: any[]) {\r\n        let result;\r\n        if (args.length === 1) {\r\n          result = {\r\n            title: null,\r\n            body: args[0],\r\n            config: null\r\n          };\r\n        } else if (args.length === 3) {\r\n          result = {\r\n            title: args[1],\r\n            body: args[0],\r\n            config: args[2]\r\n          };\r\n        } else {\r\n          result = {\r\n            title: null,\r\n            config: null,\r\n            body: args[0],\r\n            [typeof args[1] === 'string' ? 'title' : 'config']: args[1]\r\n          };\r\n        }\r\n        return descriptor.value.apply(this, [result as Snotify]);\r\n      }\r\n    };\r\n  }\r\n}\r\n","/**\r\n * Generates random id\r\n * @return number\r\n */\r\nexport function uuid(): number {\r\n  return Math.floor(Math.random() * (Date.now() - 1)) + 1;\r\n}\r\n\r\n/**\r\n * Simple is object check.\r\n * @param item Object<any>\r\n * @returns boolean\r\n */\r\nexport function isObject(item): boolean {\r\n  return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\n/**\r\n * Deep merge objects.\r\n * @param sources Array<Object<any>>\r\n * @returns Object<any>\r\n */\r\nexport function mergeDeep(...sources) {\r\n  const target = {};\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n\r\n  while (sources.length > 0) {\r\n    const source = sources.shift();\r\n    if (isObject(source)) {\r\n      for (const key in source) {\r\n        if (isObject(source[key])) {\r\n          target[key] = mergeDeep(target[key], source[key]);\r\n        } else {\r\n          Object.assign(target, { [key]: source[key] });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return target;\r\n}\r\n\r\nexport function animate(start: number, duration: number, callback: (currentValue: number, progress: number) => {}) {\r\n  let endTime;\r\n  requestAnimationFrame(timestamp => (endTime = timestamp + duration));\r\n  const calculate = () => {\r\n    requestAnimationFrame(timestamp => {\r\n      const runtime = timestamp - endTime;\r\n      const progress = Math.min(runtime / duration, 1) + start;\r\n      if (runtime < duration) {\r\n        if (callback(+(100 * progress).toFixed(2), progress)) {\r\n          calculate();\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import { SnotifyType } from '../types/snotify.type';\r\nimport { Snotify } from '../interfaces/snotify.interface';\r\n\r\n/**\r\n * Defines toast style depending on method name\r\n * @param target any\r\n * @param propertyKey SnotifyType\r\n * @param descriptor PropertyDescriptor\r\n * @returns value: ((...args: any[]) => any)\r\n */\r\nexport function SetToastType(target: any, propertyKey: SnotifyType, descriptor: PropertyDescriptor) {\r\n  return {\r\n    value(...args: any[]) {\r\n      (args[0] as Snotify).config = {\r\n        ...(args[0] as Snotify).config,\r\n        type: propertyKey\r\n      };\r\n      return descriptor.value.apply(this, args);\r\n    }\r\n  };\r\n}\r\n","import { SnotifyToastConfig } from '../interfaces/snotify-toast-config.interface';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { SnotifyEvent } from '../types/event.type';\r\nimport { SnotifyStyle } from '../enums/snotify-style.enum';\r\n// @TODO remove method in observable way\r\n/**\r\n * Toast main model\r\n */\r\nexport class SnotifyToast {\r\n  /**\r\n   * Emits SnotifyEvent\r\n   */\r\n  readonly eventEmitter = new Subject<SnotifyEvent>();\r\n  /**\r\n   * Holds all subscribers because we need to unsubscribe from all before toast get destroyed\r\n   */\r\n  private eventsHolder: Subscription[] = [];\r\n  /**\r\n   * Toast prompt value\r\n   */\r\n  value: string;\r\n  /**\r\n   * Toast validator\r\n   */\r\n  valid: boolean;\r\n  constructor(public id: number, public title: string, public body: string, public config: SnotifyToastConfig) {\r\n    if (this.config.type === SnotifyStyle.prompt) {\r\n      this.value = '';\r\n    }\r\n    this.on('hidden', () => {\r\n      this.eventsHolder.forEach((subscription: Subscription) => {\r\n        subscription.unsubscribe();\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribe to toast events\r\n   * @returns this\r\n   * @param event SnotifyEvent\r\n   * @param action (toast: this) => void\r\n   */\r\n  on(event: SnotifyEvent, action: (toast: this) => void): this {\r\n    this.eventsHolder.push(\r\n      this.eventEmitter.subscribe((e: SnotifyEvent) => {\r\n        if (e === event) {\r\n          action(this);\r\n        }\r\n      })\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Tests if a toast equals this toast.\r\n   * @returns boolean true then equals else false.\r\n   * @param toast SnotifyToast\r\n   */\r\n  equals(toast: SnotifyToast): boolean {\r\n    return this.body === toast.body && this.title === toast.title && this.config.type === toast.config.type;\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Observable, Subject, Subscription, from } from 'rxjs';\r\nimport { SnotifyToastConfig } from '../interfaces/snotify-toast-config.interface';\r\nimport { Snotify } from '../interfaces/snotify.interface';\r\nimport { SnotifyType } from '../types/snotify.type';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { TransformArgument } from '../decorators/transform-argument.decorator';\r\nimport { mergeDeep, uuid } from '../utils';\r\nimport { SetToastType } from '../decorators/set-toast-type.decorator';\r\nimport { SnotifyDefaults } from '../interfaces/snotify-defaults.interface';\r\nimport { SnotifyToast } from '../models/snotify-toast.model';\r\nimport { SnotifyStyle } from '../enums/snotify-style.enum';\r\n\r\n/**\r\n * SnotifyService - create, remove, config toasts\r\n */\r\n@Injectable()\r\n// tslint:disable:unified-signatures\r\nexport class SnotifyService {\r\n  readonly emitter = new Subject<SnotifyToast[]>();\r\n  readonly toastChanged = new Subject<SnotifyToast>();\r\n  readonly toastDeleted = new Subject<number>();\r\n  private notifications: SnotifyToast[] = [];\r\n\r\n  constructor(@Inject('SnotifyToastConfig') public config: SnotifyDefaults) {}\r\n  /**\r\n   * emit changes in notifications array\r\n   */\r\n  private emit(): void {\r\n    this.emitter.next(this.notifications.slice());\r\n  }\r\n\r\n  /**\r\n   * returns SnotifyToast object\r\n   * @param id Number\r\n   * @return SnotifyToast|undefined\r\n   */\r\n  get(id: number): SnotifyToast {\r\n    return this.notifications.find(toast => toast.id === id);\r\n  }\r\n\r\n  /**\r\n   * add SnotifyToast to notifications array\r\n   * @param toast SnotifyToast\r\n   */\r\n  private add(toast: SnotifyToast): void {\r\n    if (this.config.global.filterDuplicates && this.containsToast(toast)) {\r\n      return;\r\n    }\r\n    if (this.config.global.newOnTop) {\r\n      this.notifications.unshift(toast);\r\n    } else {\r\n      this.notifications.push(toast);\r\n    }\r\n    this.emit();\r\n  }\r\n\r\n  /**\r\n   * checks if the toast is in the collection.\r\n   * @param inToast SnotifyToast\r\n   * @returns boolean\r\n   */\r\n  private containsToast(inToast: SnotifyToast): boolean {\r\n    return this.notifications.some(toast => toast.equals(inToast));\r\n  }\r\n\r\n  /**\r\n   * If ID passed, emits toast animation remove, if ID & REMOVE passed, removes toast from notifications array\r\n   * @param id number\r\n   * @param remove boolean\r\n   */\r\n  remove(id?: number, remove?: boolean): void {\r\n    if (!id) {\r\n      return this.clear();\r\n    } else if (remove) {\r\n      this.notifications = this.notifications.filter(toast => toast.id !== id);\r\n      return this.emit();\r\n    }\r\n    this.toastDeleted.next(id);\r\n  }\r\n\r\n  /**\r\n   * Clear notifications array\r\n   */\r\n  clear(): void {\r\n    this.notifications = [];\r\n    this.emit();\r\n  }\r\n\r\n  /**\r\n   * Creates toast and add it to array, returns toast id\r\n   * @param snotify Snotify\r\n   * @return number\r\n   */\r\n  create(snotify: Snotify): SnotifyToast {\r\n    const config = mergeDeep(this.config.toast, this.config.type[snotify.config.type], snotify.config);\r\n    const toast = new SnotifyToast(uuid(), snotify.title, snotify.body, config);\r\n    this.add(toast);\r\n    return toast;\r\n  }\r\n\r\n  setDefaults(defaults: SnotifyDefaults): SnotifyDefaults {\r\n    return (this.config = mergeDeep(this.config, defaults) as SnotifyDefaults);\r\n  }\r\n\r\n  /**\r\n   * Create toast with simple style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  simple(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with simple style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  simple(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with simple style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  simple(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with simple style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  simple(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  simple(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with success style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  success(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with success style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  success(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with success style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  success(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with success style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  success(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  success(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with error style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  error(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with error style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  error(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with error style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  error(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with error style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  error(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  error(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with info style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  info(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with info style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  info(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with info style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  info(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with info style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  info(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  info(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with warning style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  warning(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with warning style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  warning(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with warning style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  warning(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with warning style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  warning(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  warning(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with confirm style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  confirm(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with confirm style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  confirm(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with confirm style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  confirm(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with confirm style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  confirm(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  confirm(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with Prompt style with two buttons, returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  prompt(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with Prompt style with two buttons, returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  prompt(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with Prompt style with two buttons, returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  prompt(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with Prompt style with two buttons, returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  prompt(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  prompt(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n   * @param body string\r\n   * @param action Promise<Snotify> | Observable<Snotify>\r\n   * @returns number\r\n   */\r\n  async(body: string, action: Promise<Snotify> | Observable<Snotify>): SnotifyToast;\r\n  /**\r\n   * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n   * @param body string\r\n   * @param title string\r\n   * @param action Promise<Snotify> | Observable<Snotify>\r\n   * @returns number\r\n   */\r\n  async(body: string, title: string, action: Promise<Snotify> | Observable<Snotify>): SnotifyToast;\r\n  /**\r\n   * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n   * @param body string\r\n   * @param action Promise<Snotify> | Observable<Snotify>\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  async(body: string, action: Promise<Snotify> | Observable<Snotify>, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n   * @param body string\r\n   * @param title string\r\n   * @param action Promise<Snotify> | Observable<Snotify>\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  async(\r\n    body: string,\r\n    title: string,\r\n    action: Promise<Snotify> | Observable<Snotify>,\r\n    config: SnotifyToastConfig\r\n  ): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  async(args: any): SnotifyToast {\r\n    let async: Observable<any>;\r\n    if (args.action instanceof Promise) {\r\n      async = from(args.action);\r\n    } else {\r\n      async = args.action;\r\n    }\r\n\r\n    const toast = this.create(args);\r\n\r\n    toast.on('mounted', () => {\r\n      const subscription: Subscription = async.subscribe(\r\n        (next?: Snotify) => {\r\n          this.mergeToast(toast, next);\r\n        },\r\n        (error?: Snotify) => {\r\n          this.mergeToast(toast, error, SnotifyStyle.error);\r\n          subscription.unsubscribe();\r\n        },\r\n        () => {\r\n          this.mergeToast(toast, {}, SnotifyStyle.success);\r\n          subscription.unsubscribe();\r\n        }\r\n      );\r\n    });\r\n\r\n    return toast;\r\n  }\r\n\r\n  private mergeToast(toast, next, type?: SnotifyType) {\r\n    if (next.body) {\r\n      toast.body = next.body;\r\n    }\r\n    if (next.title) {\r\n      toast.title = next.title;\r\n    }\r\n    if (type) {\r\n      toast.config = mergeDeep(toast.config, this.config.global, this.config.toast[type], { type }, next.config);\r\n    } else {\r\n      toast.config = mergeDeep(toast.config, next.config);\r\n    }\r\n    if (next.html) {\r\n      toast.config.html = next.html;\r\n    }\r\n    this.emit();\r\n    this.toastChanged.next(toast);\r\n  }\r\n\r\n  /**\r\n   * Creates empty toast with html string inside\r\n   * @param html string | SafeHtml\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  html(html: string | SafeHtml, config?: SnotifyToastConfig): SnotifyToast {\r\n    return this.create({\r\n      title: null,\r\n      body: null,\r\n      config: {\r\n        ...config,\r\n        ...{ html }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { SnotifyService } from '../../services/snotify.service';\r\nimport { SnotifyToast } from '../../models/snotify-toast.model';\r\n\r\n@Component({\r\n  selector: 'ng-snotify-button',\r\n  templateUrl: './buttons.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n * Buttons component\r\n */\r\nexport class ButtonsComponent {\r\n  /**\r\n   * Get buttons Array\r\n   */\r\n  @Input() toast: SnotifyToast;\r\n  constructor(private service: SnotifyService) {}\r\n\r\n  /**\r\n   * remove toast\r\n   */\r\n  remove() {\r\n    this.service.remove(this.toast.id);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { SnotifyToast } from '../../models/snotify-toast.model';\r\n\r\n@Component({\r\n  selector: 'ng-snotify-prompt',\r\n  templateUrl: './prompt.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n * Prompt component. Part of PROMPT type\r\n */\r\nexport class PromptComponent {\r\n  /**\r\n   * Get PROMPT placeholder\r\n   */\r\n  @Input() toast: SnotifyToast;\r\n  /**\r\n   * Is PROMPT focused\r\n   */\r\n  isPromptFocused = false;\r\n}\r\n","/**\r\n * Toast position\r\n */\r\nexport enum SnotifyPosition {\r\n  leftTop = 'leftTop',\r\n  leftCenter = 'leftCenter',\r\n  leftBottom = 'leftBottom',\r\n  rightTop = 'rightTop',\r\n  rightCenter = 'rightCenter',\r\n  rightBottom = 'rightBottom',\r\n  centerTop = 'centerTop',\r\n  centerCenter = 'centerCenter',\r\n  centerBottom = 'centerBottom'\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { SnotifyService } from '../../services/snotify.service';\r\nimport { SnotifyToast } from '../../models/snotify-toast.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SnotifyNotifications } from '../../interfaces/snotify-notifications.interface';\r\nimport { SnotifyPosition } from '../../enums/snotify-position.enum';\r\nimport { SnotifyEvent } from '../../types/event.type';\r\n\r\n@Component({\r\n  selector: 'ng-snotify',\r\n  templateUrl: './snotify.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SnotifyComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Toasts array\r\n   */\r\n  notifications: SnotifyNotifications;\r\n  /**\r\n   * Toasts emitter\r\n   */\r\n  emitter: Subscription;\r\n  /**\r\n   * Helper for slice pipe (maxOnScreen)\r\n   */\r\n  dockSizeA: number;\r\n  /**\r\n   * Helper for slice pipe (maxOnScreen)\r\n   */\r\n  dockSizeB: number | undefined;\r\n  /**\r\n   * Helper for slice pipe (maxAtPosition)\r\n   */\r\n  blockSizeA: number;\r\n  /**\r\n   * Helper for slice pipe (maxAtPosition)\r\n   */\r\n  blockSizeB: number | undefined;\r\n  /**\r\n   * Backdrop Opacity\r\n   */\r\n  backdrop = -1;\r\n  /**\r\n   * How many toasts with backdrop in current queue\r\n   */\r\n  withBackdrop: SnotifyToast[];\r\n\r\n  constructor(private service: SnotifyService) {}\r\n\r\n  /**\r\n   * Init base options. Subscribe to options, lifecycle change\r\n   */\r\n  ngOnInit() {\r\n    this.emitter = this.service.emitter.subscribe((toasts: SnotifyToast[]) => {\r\n      if (this.service.config.global.newOnTop) {\r\n        this.dockSizeA = -this.service.config.global.maxOnScreen;\r\n        this.dockSizeB = undefined;\r\n        this.blockSizeA = -this.service.config.global.maxAtPosition;\r\n        this.blockSizeB = undefined;\r\n        this.withBackdrop = toasts.filter(toast => toast.config.backdrop >= 0);\r\n      } else {\r\n        this.dockSizeA = 0;\r\n        this.dockSizeB = this.service.config.global.maxOnScreen;\r\n        this.blockSizeA = 0;\r\n        this.blockSizeB = this.service.config.global.maxAtPosition;\r\n        this.withBackdrop = toasts.filter(toast => toast.config.backdrop >= 0).reverse();\r\n      }\r\n      this.notifications = this.splitToasts(toasts.slice(this.dockSizeA, this.dockSizeB));\r\n      this.stateChanged('mounted');\r\n    });\r\n  }\r\n\r\n  // TODO: fix backdrop if more than one toast called in a row\r\n  /**\r\n   * Changes the backdrop opacity\r\n   * @param event SnotifyEvent\r\n   */\r\n  stateChanged(event: SnotifyEvent) {\r\n    if (!this.withBackdrop.length) {\r\n      if (this.backdrop >= 0) {\r\n        this.backdrop = -1;\r\n      }\r\n      return;\r\n    }\r\n    switch (event) {\r\n      case 'mounted':\r\n        if (this.backdrop < 0) {\r\n          this.backdrop = 0;\r\n        }\r\n        break;\r\n      case 'beforeShow':\r\n        this.backdrop = this.withBackdrop[this.withBackdrop.length - 1].config.backdrop;\r\n        break;\r\n      case 'beforeHide':\r\n        if (this.withBackdrop.length === 1) {\r\n          this.backdrop = 0;\r\n        }\r\n        break;\r\n      case 'hidden':\r\n        if (this.withBackdrop.length === 1) {\r\n          this.backdrop = -1;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Split toasts toasts into different objects\r\n   * @param toasts SnotifyToast[]\r\n   * @returns SnotifyNotifications\r\n   */\r\n  splitToasts(toasts: SnotifyToast[]): SnotifyNotifications {\r\n    const result: SnotifyNotifications = {};\r\n\r\n    for (const property in SnotifyPosition) {\r\n      if (SnotifyPosition.hasOwnProperty(property)) {\r\n        result[SnotifyPosition[property]] = [];\r\n      }\r\n    }\r\n\r\n    toasts.forEach((toast: SnotifyToast) => {\r\n      result[toast.config.position as string].push(toast);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe subscriptions\r\n   */\r\n  ngOnDestroy() {\r\n    this.emitter.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { SnotifyService } from '../../services/snotify.service';\r\nimport { SnotifyToast } from '../../models/snotify-toast.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SnotifyEvent } from '../../types/event.type';\r\nimport { SnotifyStyle } from '../../enums/snotify-style.enum';\r\n\r\n@Component({\r\n  selector: 'ng-snotify-toast',\r\n  templateUrl: './toast.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ToastComponent implements OnInit, OnDestroy, AfterContentInit {\r\n  /**\r\n   * Get toast from notifications array\r\n   */\r\n  @Input() toast: SnotifyToast;\r\n  @Output() stateChanged = new EventEmitter<SnotifyEvent>();\r\n\r\n  toastDeletedSubscription: Subscription;\r\n  toastChangedSubscription: Subscription;\r\n\r\n  /**\r\n   * requestAnimationFrame id\r\n   */\r\n  animationFrame: number;\r\n\r\n  /**\r\n   * Toast state\r\n   */\r\n  state = {\r\n    paused: false,\r\n    progress: 0,\r\n    animation: '',\r\n    isDestroying: false,\r\n    promptType: SnotifyStyle.prompt\r\n  };\r\n\r\n  constructor(private service: SnotifyService) {}\r\n\r\n  // Lifecycles\r\n\r\n  /**\r\n   * Init base options. Subscribe to toast changed, toast deleted\r\n   */\r\n  ngOnInit() {\r\n    this.toastChangedSubscription = this.service.toastChanged.subscribe((toast: SnotifyToast) => {\r\n      if (this.toast.id === toast.id) {\r\n        this.initToast();\r\n      }\r\n    });\r\n    this.toastDeletedSubscription = this.service.toastDeleted.subscribe(id => {\r\n      if (this.toast.id === id) {\r\n        this.onRemove();\r\n      }\r\n    });\r\n    if (!this.toast.config.timeout) {\r\n      this.toast.config.showProgressBar = false;\r\n    }\r\n    this.toast.eventEmitter.next('mounted');\r\n    this.state.animation = 'snotifyToast--in';\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    setTimeout(() => {\r\n      this.stateChanged.emit('beforeShow');\r\n      this.toast.eventEmitter.next('beforeShow');\r\n      this.state.animation = this.toast.config.animation.enter;\r\n    }, this.service.config.toast.animation.time / 5); // time to show toast push animation (snotifyToast--in)\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe subscriptions\r\n   */\r\n  ngOnDestroy(): void {\r\n    cancelAnimationFrame(this.animationFrame);\r\n    this.toast.eventEmitter.next('destroyed');\r\n    this.toastChangedSubscription.unsubscribe();\r\n    this.toastDeletedSubscription.unsubscribe();\r\n  }\r\n\r\n  /*\r\n  Event hooks\r\n   */\r\n\r\n  /**\r\n   * Trigger OnClick lifecycle\r\n   */\r\n  onClick() {\r\n    this.toast.eventEmitter.next('click');\r\n    if (this.toast.config.closeOnClick) {\r\n      this.service.remove(this.toast.id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger beforeDestroy lifecycle. Removes toast\r\n   */\r\n  onRemove() {\r\n    this.state.isDestroying = true;\r\n    this.toast.eventEmitter.next('beforeHide');\r\n    this.stateChanged.emit('beforeHide');\r\n    this.state.animation = this.toast.config.animation.exit;\r\n    setTimeout(() => {\r\n      this.stateChanged.emit('hidden');\r\n      this.state.animation = 'snotifyToast--out';\r\n      this.toast.eventEmitter.next('hidden');\r\n      setTimeout(() => this.service.remove(this.toast.id, true), this.toast.config.animation.time / 2);\r\n    }, this.toast.config.animation.time / 2);\r\n  }\r\n\r\n  /**\r\n   * Trigger onHoverEnter lifecycle\r\n   */\r\n  onMouseEnter() {\r\n    this.toast.eventEmitter.next('mouseenter');\r\n    if (this.toast.config.pauseOnHover) {\r\n      this.state.paused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger onHoverLeave lifecycle\r\n   */\r\n  onMouseLeave() {\r\n    if (this.toast.config.pauseOnHover && this.toast.config.timeout) {\r\n      this.state.paused = false;\r\n      this.startTimeout(this.toast.config.timeout * this.state.progress);\r\n    }\r\n    this.toast.eventEmitter.next('mouseleave');\r\n  }\r\n\r\n  /**\r\n   * Remove toast completely after animation\r\n   */\r\n  onExitTransitionEnd() {\r\n    if (this.state.isDestroying) {\r\n      return;\r\n    }\r\n    this.initToast();\r\n    this.toast.eventEmitter.next('shown');\r\n  }\r\n\r\n  /*\r\n   Common\r\n   */\r\n\r\n  /**\r\n   * Initialize base toast config\r\n   *\r\n   */\r\n  initToast(): void {\r\n    if (this.toast.config.timeout > 0) {\r\n      this.startTimeout(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start progress bar\r\n   * @param startTime number\r\n   */\r\n  startTimeout(startTime: number = 0) {\r\n    const start = performance.now();\r\n    const calculate = () => {\r\n      this.animationFrame = requestAnimationFrame(timestamp => {\r\n        const runtime = timestamp + startTime - start;\r\n        const progress = Math.min(runtime / this.toast.config.timeout, 1);\r\n        if (this.state.paused) {\r\n          cancelAnimationFrame(this.animationFrame);\r\n        } else if (runtime < this.toast.config.timeout) {\r\n          this.state.progress = progress;\r\n          calculate();\r\n        } else {\r\n          this.state.progress = 1;\r\n          cancelAnimationFrame(this.animationFrame);\r\n          this.service.remove(this.toast.id);\r\n        }\r\n      });\r\n    };\r\n    calculate();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keys',\r\n  pure: false\r\n})\r\n/**\r\n * Extract object keys pipe\r\n */\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any, args: any[] = null): any {\r\n    if (!value) {\r\n      return value;\r\n    }\r\n    return Object.keys(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate'\r\n})\r\n\r\n/**\r\n * Truncate toast text pipe\r\n */\r\nexport class TruncatePipe implements PipeTransform {\r\n  transform(value: string, ...args: Array<any>): any {\r\n    let limit = 40;\r\n    let trail = '...';\r\n    if (args.length > 0) {\r\n      limit = args.length > 0 ? parseInt(args[0], 10) : limit;\r\n      trail = args.length > 1 ? args[1] : trail;\r\n    }\r\n\r\n    return value.length > limit ? value.substring(0, limit) + trail : value;\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { SnotifyComponent } from './components/snotify/snotify.component';\r\nimport { SnotifyService } from './services/snotify.service';\r\nimport { KeysPipe } from './pipes/keys.pipe';\r\nimport { TruncatePipe } from './pipes/truncate.pipe';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonsComponent } from './components/buttons/buttons.component';\r\nimport { PromptComponent } from './components/prompt/prompt.component';\r\nimport { ToastComponent } from './components/toast/toast.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [SnotifyComponent, ToastComponent, TruncatePipe, ButtonsComponent, PromptComponent, KeysPipe],\r\n  exports: [SnotifyComponent, TruncatePipe, KeysPipe]\r\n})\r\nexport class SnotifyModule {\r\n  static forRoot(): ModuleWithProviders<SnotifyModule> {\r\n    return {\r\n      ngModule: SnotifyModule,\r\n      providers: [SnotifyService]\r\n    };\r\n  }\r\n}\r\n","import { SnotifyPosition } from './enums/snotify-position.enum';\r\nimport { SnotifyStyle } from './enums/snotify-style.enum';\r\n\r\n/**\r\n * Snotify default configuration object\r\n */\r\nexport const ToastDefaults = {\r\n  global: {\r\n    newOnTop: true,\r\n    maxOnScreen: 8,\r\n    maxAtPosition: 8,\r\n    filterDuplicates: false\r\n  },\r\n  toast: {\r\n    type: SnotifyStyle.simple,\r\n    showProgressBar: true,\r\n    timeout: 2000,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    bodyMaxLength: 150,\r\n    titleMaxLength: 16,\r\n    backdrop: -1,\r\n    icon: null,\r\n    iconClass: null,\r\n    html: null,\r\n    position: SnotifyPosition.rightBottom,\r\n    animation: { enter: 'fadeIn', exit: 'fadeOut', time: 400 }\r\n  },\r\n  type: {\r\n    [SnotifyStyle.prompt]: {\r\n      timeout: 0,\r\n      closeOnClick: false,\r\n      buttons: [\r\n        { text: 'Ok', action: null, bold: true },\r\n        { text: 'Cancel', action: null, bold: false }\r\n      ],\r\n      placeholder: 'Enter answer here...',\r\n      type: SnotifyStyle.prompt\r\n    },\r\n    [SnotifyStyle.confirm]: {\r\n      timeout: 0,\r\n      closeOnClick: false,\r\n      buttons: [\r\n        { text: 'Ok', action: null, bold: true },\r\n        { text: 'Cancel', action: null, bold: false }\r\n      ],\r\n      type: SnotifyStyle.confirm\r\n    },\r\n    [SnotifyStyle.simple]: {\r\n      type: SnotifyStyle.simple\r\n    },\r\n    [SnotifyStyle.success]: {\r\n      type: SnotifyStyle.success\r\n    },\r\n    [SnotifyStyle.error]: {\r\n      type: SnotifyStyle.error\r\n    },\r\n    [SnotifyStyle.warning]: {\r\n      type: SnotifyStyle.warning\r\n    },\r\n    [SnotifyStyle.info]: {\r\n      type: SnotifyStyle.info\r\n    },\r\n    [SnotifyStyle.async]: {\r\n      pauseOnHover: false,\r\n      closeOnClick: false,\r\n      timeout: 0,\r\n      showProgressBar: false,\r\n      type: SnotifyStyle.async\r\n    }\r\n  }\r\n};\r\n","/*\r\n * Public API Surface of ng-snotify\r\n */\r\n\r\nexport * from './lib/components';\r\nexport * from './lib/enums';\r\nexport * from './lib/interfaces';\r\nexport * from './lib/models';\r\nexport * from './lib/pipes';\r\nexport * from './lib/services';\r\nexport * from './lib/snotify.module';\r\nexport * from './lib/toast-defaults';\r\nexport * from './lib/types';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ButtonsComponent as ɵh} from './lib/components/buttons/buttons.component';\nexport {PromptComponent as ɵi} from './lib/components/prompt/prompt.component';\nexport {SnotifyComponent as ɵa} from './lib/components/snotify/snotify.component';\nexport {ToastComponent as ɵf} from './lib/components/toast/toast.component';\nexport {SetToastType as ɵe} from './lib/decorators/set-toast-type.decorator';\nexport {TransformArgument as ɵd} from './lib/decorators/transform-argument.decorator';\nexport {SnotifyDefaults as ɵc} from './lib/interfaces/snotify-defaults.interface';\nexport {KeysPipe as ɵj} from './lib/pipes/keys.pipe';\nexport {TruncatePipe as ɵg} from './lib/pipes/truncate.pipe';\nexport {SnotifyService as ɵb} from './lib/services/snotify.service';"]}